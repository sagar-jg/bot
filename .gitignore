# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.*
.venv
env/
venv/
venv_*/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the .idea directory, but exclude 
#  certain files
.idea/
*.swp
*.swo
*~

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
*.swp
*.swo
*~.nib
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project specific
# Environment files
.env.dev
.env.uat
.env.prod
.env.local
.env.*.local

# Virtual environments
venv_dev/
venv_uat/
venv_prod/

# Logs
logs/
*.log
*.log.*

# Data directories
data/
!data/.gitkeep
tmp/
!tmp/.gitkeep

# Backup files
*.bak
*.backup
*.old
backups/

# PM2 logs
pm2-*.log

# Database
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/
__pycache__/
*.pyc
*.pyo
*.pyd

# Temporary files
temp/
*.tmp
*.temp

# IDE and editor files
.idea/
.vscode/
*.swp
*.swo
*~
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
Thumbs.db
ehthumbs.db

# Docker
.dockerignore

# SSL certificates (if storing locally)
*.pem
*.key
*.crt
*.cert

# Local configuration overrides
config/local/
config/*.local.json

# Test artifacts
test-results/
.pytest_cache/
.coverage
htmlcov/

# Documentation builds
docs/_build/
docs/.doctrees/

# Node.js (for PM2 and other tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn/

# Package-lock files
package-lock.json
yarn.lock

# Local storage
.local/

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# PEP 582
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# Local development overrides
override.yml
docker-compose.override.yml

# Generated requirements
requirements-frozen.txt

# Security files
.secrets/
secrets.json

# Monitoring and metrics
.monitoring/
metrics/

# Migration files (if using alembic)
migrations/versions/
!migrations/versions/.gitkeep

# Local scripts
local_scripts/

# Environment specific artifacts
artifacts/

# Build artifacts
build/
dist/

# AI model files
models/
*.model
*.bin
*.h5
*.onnx

# Large data files
*.csv
*.json
*.parquet
*.feather
!tests/fixtures/*.csv
!tests/fixtures/*.json

# Temporary directories
temp*/
tmp*/

# Editor backups
*~
.#*
\#*#
.*.sw[a-z]
*.un~
Session.vim
.netrwhist

# JetBrains
.idea/
*.iml
*.ipr
*.iws

# Eclipse
.project
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# NetBeans
/nbproject/private/
/build/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Local development database
dev.db
test.db
local.db

# Performance and profiling
*.prof
*.profile
.profiling/

# Security scanning results
.bandit
safety-report.json

# API keys and sensitive data
api_keys.json
credentials.json
.credentials/

# Development tools
.pre-commit-config.yaml
.flake8
.pylintrc
mypy.ini
pyproject.toml
setup.cfg
tox.ini

# Package manager files
Poetry.lock
Pipfile
Pipfile.lock
conda-meta/

# Jupyter Lab
.jupyter/
.ipython/

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs
/site

# Sphinx
docs/_build/

# Pytest
.pytest_cache/
.cache/
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre
.pyre/

# pytype
.pytype/

# Cython
cython_debug/
